<!DOCTYPE html>
<html>

<head>
   <% include ../template/head.ejs %>
</head>

<body>
   <header>
      <% include ../template/header.ejs %>
   </header>

   <div id="wrapper">

      <% include template/sidebar.ejs %>

      <div id="page-wrapper" style="min-height: 898px;">
         <div class="row">
            <div class="col-lg-12">
               <h1 class="page-header">Online Workers</h1>
            </div>
         </div>

         <div id="worker-container">
         </div>
      </div>
   </div>

   <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
   <script>
      google.charts.load( 'current', { 'packages': ['gauge'] } );

      var prev_handler = window.onload;
      window.onload = function () {
         if ( prev_handler ) {
            prev_handler();
         }

         generateBoard();
      };

      var workerAddresses = [];
      function generateBoard() {
         drawBoard();
         setInterval( drawBoard, 1000 );
      }
      function drawBoard() {
         const xmlhttp = new XMLHttpRequest();
         xmlhttp.onreadystatechange = function () {
            if ( xmlhttp.readyState == 4 && xmlhttp.status == 200 ) {

               const workers = JSON.parse( xmlhttp.response );

               var pageHeader = document.getElementsByClassName( 'page-header' )[0];
               pageHeader.innerHTML = 'Online Workers [ ' + workers.length + ' ]';

               var activeWorkers = [];
               const container = document.getElementById( 'worker-container' );

               for ( var idx = 0; idx < workers.length; ++idx ) {

                  var gauge;
                  var panel;
                  if ( ( panel = document.getElementById( workers[idx].address ) ) === null ) {

                     // Worker's element is not created yet
                     workerAddresses.push( workers[idx].address );
                     activeWorkers.push( workers[idx].address );

                     console.log(workers[idx])

                     panel = document.createElement( 'div' );
                     if ( workers[idx].state === 1 ) {
                        panel.className = 'panel autocollapse panel-warning';
                     } else {
                        panel.className = 'panel autocollapse panel-primary';
                     }
                     panel.id = workers[idx].address;

                     var panelHeading = document.createElement( 'div' );
                     panelHeading.className = 'panel-heading clickable';

                     var panelNavBar = document.createElement( 'div' );
                     panelNavBar.className = 'navbar-collapse';
                     panelHeading.appendChild( panelNavBar );

                     var leftNav = document.createElement( 'ul' );
                     leftNav.className = 'nav navbar-nav';
                     panelNavBar.appendChild( leftNav );

                     var runningInstances = document.createElement( 'span' );
                     runningInstances.className = 'badge';
                     console.log(workers[idx])
                     runningInstances.innerHTML = workers[idx].runningInstances;
                     runningInstances.setAttribute( 'data-toggle', 'tooltip' );
                     runningInstances.setAttribute( 'data-placement', 'top' );
                     runningInstances.setAttribute( 'title', 'Running Instances' );


                     var panelTitle = document.createElement( 'h3' );
                     panelTitle.className = 'panel-title';
                     panelTitle.innerHTML = runningInstances.outerHTML;
                     if ( workers[idx].alias !== undefined ) {
                        panelTitle.innerHTML += " " + workers[idx].alias;
                     }
                     panelTitle.innerHTML += " - " + workers[idx].address;
                     panelTitle.style.display = 'inline';
                     panelTitle.style = 'margin-top: 25px';

                     var leftNavLi = document.createElement( 'li' );
                     leftNavLi.appendChild( panelTitle );
                     leftNav.appendChild( leftNavLi );

                     var rightNav = document.createElement( 'ul' );
                     rightNav.className = 'nav navbar-nav navbar-right';
                     panelNavBar.appendChild( rightNav );

                     const address = workers[idx].address;

                     var pauseBtn = document.createElement( 'label' );
                     pauseBtn.type = 'button';
                     pauseBtn.className = 'btn btn-secondary non-clickable';
                     pauseBtn.onclick = function () {
                        $.post( "/api/simulation_instance/pause", { address: address } );
                     };
                     //if ( workers[idx].status === undefined || workers[idx].status === 0 ) {
                     //   pauseBtn.className += ' disabled';
                     //}
                     pauseBtn.innerHTML = '<span class=\'glyphicon glyphicon-pause non-clickable\'></span><h6 class="non-clickable">PAUSE</h6>';

                     var rightNavLi1 = document.createElement( 'li' );
                     rightNavLi1.appendChild( pauseBtn );

                     var resumeBtn = document.createElement( 'label' );
                     resumeBtn.type = 'button';
                     resumeBtn.className = 'btn btn-secondary non-clickable';
                     resumeBtn.innerHTML = '<span class=\'glyphicon glyphicon-play non-clickable\'></span><h6 class="non-clickable">RESUME</h6>';
                     resumeBtn.onclick = function () {
                        $.post( "/api/simulation_instance/resume", { address: address } );
                     };
                     //if ( workers[idx].status === undefined || workers[idx].status === 1 ) {
                     //   console.log( workers[idx].running)
                     //   resumeBtn.className += ' disabled';
                     //}

                     var rightNavLi2 = document.createElement( 'li' );
                     rightNavLi2.appendChild( resumeBtn );

                     var stopBtn = document.createElement( 'label' );
                     stopBtn.type = 'button';
                     stopBtn.className = 'btn btn-secondary non-clickable';
                     stopBtn.innerHTML = '<span class=\'glyphicon glyphicon-stop non-clickable\'></span><h6 class="non-clickable">STOP</h6>';
                     stopBtn.onclick = function () {
                        $.post( "/api/simulation_instance/stop", { address: address } );
                     };

                     //stopBtn.setAttribute( 'data-toggle', 'confirmation' );
                     //stopBtn.setAttribute( 'data-popout', 'true' );
                     //stopBtn.setAttribute( 'data-singleton', 'true' );

                     var rightNavLi3 = document.createElement( 'li' );
                     rightNavLi3.appendChild( stopBtn );

                     rightNav.appendChild( rightNavLi1 );
                     rightNav.appendChild( rightNavLi2 );
                     rightNav.appendChild( rightNavLi3 );

                     panelNavBar.appendChild( rightNav );

                     panel.appendChild( panelHeading );

                     panelBody = document.createElement( 'div' );
                     panelBody.className = 'panel-body';
                     panelBody.style = 'display: none';

                     gauge = document.createElement( 'div' );
                     gauge.className = 'gauge';

                     panelBody.appendChild( gauge );

                     panel.appendChild( panelBody );

                     container.appendChild( panel );

                  } else {
                     activeWorkers.push( workers[idx].address );

                     if ( workers[idx].state === 1 ) {
                        panel.className = 'panel autocollapse panel-warning';
                     } else {
                        panel.className = 'panel autocollapse panel-primary';
                     }

                     var child = panel.getElementsByTagName( '*' );

                     for ( var i = -1, l = child.length; ++i < l; ) {
                        if ( child[i].className == 'gauge' ) {
                           gauge = child[i];
                        }

                        if ( child[i].className == 'badge' ) {
                           child[i].innerHTML = workers[idx].runningInstances;
                        }
                     }
                  }

                  var data = google.visualization.arrayToDataTable( [
                     ['Label', 'Value'],
                     ['Memory', ( 1 - workers[idx].resource.memory ) * 100],
                     ['CPU', (1 - workers[idx].resource.cpu ) * 100]
                  ] );
                  var options = {
                     width: 400, height: 120,
                     redFrom: 90, redTo: 100,
                     yellowFrom: 75, yellowTo: 90,
                     minorTicks: 5
                  };

                  var chart = new google.visualization.Gauge( gauge );
                  chart.draw( data, options );
               }

               // Cleaning
               for ( var idx = 0; idx < workerAddresses.length; ++idx ) {
                  var found = activeWorkers.indexOf( workerAddresses[idx] );
                  if ( found === -1 ) {
                     const div = document.getElementById( workerAddresses[idx] );
                     div.remove();
                     workerAddresses.splice( idx, 1 );
                  }
               }

               $( document ).ready( function () {
                  $( '[data-toggle="popover"]' ).popover();
               } );


               $( '[data-toggle=confirmation]' ).confirmation( { rootSelector: '[data-toggle=confirmation]' } );

               $( '[name=Cancel]' ).on( 'confirmed.bs.confirmation', function () {
                  //$.post( '/cancel', { _simulationGroup: $( this ).closest( 'tr' ).attr( 'id' ) },
                  //   () => {
                  //      location.reload();
                  //   } );
               } );

               $( '[name=Remove]' ).on( 'confirmed.bs.confirmation', function () {
                  //$.post( '/remove', { _simulationGroup: $( this ).closest( 'tr' ).attr( 'id' ) },
                  //   () => {
                  //      location.reload();
                  //   } );
               } );
            }
         }
         xmlhttp.open( 'GET', '/workers', true );
         xmlhttp.send();
      }

      function pauseCommand() {
         console.log( "PAUSE" );
      }

      function resumeCommand() {
         $.post( "/api/simulation_instance/resume", { address: 123 }, function ( data, status ) {
            alert( "Data: " + data + "\nStatus: " + status );
         } );
      }

      function stopCommand() {
         console.log( "STOP" );
      }


      $( document ).on( 'click', '.panel div.clickable', function ( e ) {
         var $this = $( this ); //Heading

         if ( $( e.target ).hasClass( 'non-clickable' ) ) {
            return;
         }

         var $panel = $this.parent( '.panel' );
         var $panel_body = $panel.children( '.panel-body' );
         var $display = $panel_body.css( 'display' );

         if ( $display == 'block' ) {
            $panel_body.slideUp();
         } else if ( $display == 'none' ) {
            $panel_body.slideDown();
         }
      } );

      $( document ).ready( function ( e ) {
         var $classy = '.panel.autocollapse';

         var $found = $( $classy );
         $found.find( '.panel-body' ).hide();
         $found.removeClass( $classy );
      } );

   </script>

   <script src='../js/sb-admin-2.js'></script>

</body>

</html>
<footer>
   <% include ../template/footer.ejs %>
</footer>
